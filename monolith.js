(function(name, definition) {
    if (typeof module != 'undefined') module.exports = definition();
    else if (typeof define == 'function' && typeof define.amd == 'object') define(definition);
    else this[name] = definition();
}('BAS', function() {
	"use strict";

var LIB={__heap:{uses:["erroom"],code:";heap management 1.1\n        HP_INIT:            \n\n        LXI     H,((RAMTOP-HEAP)&0xfffe)-4 \n        SHLD    HEAP \n        LXI     H,HEAP \n        CALL    hp_n \n        MVI     A,0FFh \n        MOV     m,a \n        INX     h \n        MOV     m,a \n        RET \nHP_F:       LXI     H,HEAP+1 \nHP_F2:              \n        MOV     d,m \n        DCX     h \n        MOV     e,m \n        MOV     A,E \n        ANI     01h ;0=empty,1=full\n        RET     \nHP_N:               \n        MOV     A,M \n        ANI     0FEh\n        MOV     E,A \n        INX     H \n        MOV     D,M \n        DCX     H \n        DAD     D \n        INX     H \n        INX     H \n        INX     H \n        JMP     HP_F2 \n\nHP_FE:\n        CALL    hp_f \nHP_FE2:             \n        RZ\n        MOV     a,d \n        ANA     e \n        INR     a \n        JZ      ERROOM \nHP_FEN:             \n        CALL    hp_n \n        JMP     hp_fe2 \nHP_FREE:\n        MOV     a,m \n        ANI     0feh \n        MOV     m,a \n        RET     \nHP_JOIN:            \n        CALL    hp_fe \nHP_J0:              \n        PUSH    h \n        CALL    hp_n \n        JZ      hp_j \n        MOV     a,e \n        ANA     d \n        INR     a \n        POP     d \n        RZ      \n        CALL    hp_fe2 \n        JMP     hp_j0 \nHP_J:               \n        POP     h \n        MOV     a,e \n        ADD     m \n        MOV     e,a \n        INX     h \n        MOV     a,d \n        ADC     m \n        MOV     d,a \n        INX     d \n        INX     d \n        MOV     m,d \n        DCX     h \n        MOV     m,e \n        ORI     1 ; Z=0\n        RET     \nHP_A:\n        INX     b \n        MOV     a,c \n        RRC     \n        JNC     hp_aeven \n        INX     b \nHP_AEVEN:           \n        CALL    hp_fe \nHP_ALOP:            \n        MOV     a,d \n        CMP     b \n        JC      hp_alow \n        ;JNZ     hp_amore \n        MOV     a,e \n        CMP     c \n        jz hp_aexact\n        ;porovnat, jestli zbývá alespoň n+6\n        push b\n        inx b\n        inx b\n        inx b\n        inx b\n        inx b\n        inx b\n\t\tmov a,d\n\t\tcmp b\n\t\tjc hp_alow6        \n        jnz hp_amore6\n        mov a,e\n        cmp c\n        jnc hp_amore6\nhp_alow6:\n\t\tpop b\nHP_ALOW:\n        CALL    hp_fen \n        JMP     hp_alop \nhp_amore6:\n\t\tpop b\nHP_AMORE:           \n        MOV     a,e \n        SUB     c \n        MOV     e,a \n        MOV     a,d \n        SBB     b \n        MOV     d,a \n        DCX     d \n        DCX     d \n        PUSH    h \n        DAD     b\n        INX     h \n        INX     h \n        MOV     m,e \n        INX     h \n        MOV     m,d \n        POP     h \nhp_aexact:\n        INX     b \n        MOV     m,c \n        INX     h \n        MOV     m,b \n        INX     h\n        MVI     m,0aah \n        INX     h\n        RET     \nhp_test:\n        push d\n        lxi d,HEAP\n        mov a,h\n        cmp d\n        jc hp_noheap\n        jnz hp_noheap\n        mov a,l\n        cmp e\nhp_noheap: \n        pop d\n        ret        \nhp_unass: \n        call hp_test\n        rc\n        dcx h\n        MVI     m,0aah \n        INX     h\n        ret        \nhp_assign: \n        call hp_test\n        rc\n        dcx h\n        MVI     m,055h \n        INX     h\n        ret        \nhp_gc:\n        CALL    hp_f \nHP_gc1:             \n        JZ hp_gcn\nhp_gc2:        \n        MOV     a,d \n        ANA     e \n        INR     a \n        JZ hp_gcf\n        inx h\n        inx h\n        mov a,m\n        dcx h\n        dcx h\n        cpi 0aah ;unassigned\n        jnz hp_gcn\n        push h\n        call hp_free\n        pop h\nHP_gcN:             \n        CALL    hp_n \n        JMP     hp_gc2 \t\n        \nHP_gcf:    CALL    hp_join \n        JNZ     hp_gcf\n        ret        \nHP_DONE:            \n"},printstr:{uses:["serout"],code:"\tMOV A,M\n\tORA A\n\tRZ\n\tCALL serout\n\tINX H\n\tJMP printstr\n"},printint:{uses:["s_div10","serout","f_abs"],code:"\tMOV     a,h \n\tORA     a \n\tJP      pipos \n\tMVI     a,2Dh ;- \n\tCALL serout\n\tCALL    f_abs \npipos:\tCALL  s_div10 \n\tPUSH    psw \n\tMOV     a,h \n\tORA     l \n\tJZ      pilast \n\tCALL    pipos \npilast:\tPOP     psw \n\tADI 30h\n\tCALL serout\n\tRET\n"},prtchan:{uses:null,sysdb:["prtchan"],code:"\tMOV A,L\n\tSTA sv_prtchan\n\tRET\n"},println:{uses:["serout"],code:"\tMVI A,0Dh\n\tCALL SEROUT\n\tMVI A,0Ah\n\tCALL SEROUT\n\tRET\n"},printtab:{uses:["serout"],code:"\tMVI A,20h\n\tCALL SEROUT\n\tMVI A,09h\n\tCALL SEROUT\n\tRET\n"},input:{uses:["serin"],code:"    lxi h,i_buffer\n    mvi c,0\ni_rd_l:\n    call serin\n    jz i_rd_l\n    cpi 0dh\n    jz i_eol\n    cpi 0ah\n    jz i_eol\n    mov m,a\n    inx h\n    inr c\n    jnz i_rd_l\ni_eol:\n    mvi m,0\n    ret \n"},inputint:{uses:["input","f_val"],code:"    call input\n    lxi h,i_buffer\n    call f_val\n    ret        \n"},inputstr:{uses:["input","__heap","s_strcpy"],code:"    call input\n    inx b\n    call hp_a\n    lxi d,i_buffer\n    jmp s_strcpy\n"},errovfl:{uses:["printstr"],code:'\tlxi h,errovfl_m\n\tcall printstr\n\tjmp errgo\nerrovfl_m:\n\tdb 0ah,0dh\n\t.cstr "### MULT OVFL",0dh,0ah\n'},erridx:{uses:["printstr"],code:'\tlxi h,erridx_m\n\tcall printstr\n\tjmp errgo\nerridx_m:\n\tdb 0ah,0dh\n\t.cstr "### INDEX OUT OF LIMITS",0dh,0ah\n'},errdiv:{uses:["printstr"],code:'\tlxi h,errdiv_m\n\tcall printstr\n\tjmp errgo\nerrdiv_m:\n\tdb 0ah,0dh\n\t.cstr "### DIVISION BY ZERO",0dh,0ah\n'},erroom:{uses:["printstr"],code:'\tlxi h,erroom_m\n\tcall printstr\n\tjmp errgo\nerroom_m:\n\tdb 0ah,0dh\n\t.cstr "### OUT OF MEMORY",0dh,0ah\n'},errstop:{uses:["printstr"],code:'\tlxi h,errstop_m\n\tcall printstr\n\tjmp errgo\nerrstop_m:\n\tdb 0ah,0dh\n\t.cstr "### STOP",0dh,0ah\n'},serout:{uses:null,sysdb:["prtchan"],code:"\tRST 1\n\tRET\n"},serin:{uses:["serout"],sysdb:["prtchan"],code:"\tIN 0deh ;acias\n\tani 1\n\trz\n\tin 0dfh ;aciad\n\tcall serout\n\tora a\n\tRET\n"},mul16:{uses:null,code:"    push h\n    pop b\n    lxi h,0\n    mvi a,16\nmul16loop:\n    dad h\n    push psw\n    mov a,e\n    ral\n    mov e,a\n    mov a,d\n    ral\n    mov d,a\n    jnc mul16no\n    dad b\n    jnc mul16no\n    inx d\nmul16no:\n    pop psw\n    dcr a\n    jnz mul16loop\n    ret\n"},div16:{uses:null,code:"    push d\n    push h\n    pop d\n    pop b\n    mvi a,16\n    lxi h,0\n    jmp div16_skip\ndiv16_loop:\n    dad b\ndiv16_lop2:   \n    pop psw\n    dcr a\n    rz\ndiv16_skip:\n    push psw\n    xchg\n    dad h\n    xchg\n    jnc div16_adc\n    dad h\n    inx h\n    jmp div16_adskip\ndiv16_adc:\n    dad h\ndiv16_adskip:    \n    ;sbc hl,bc\n    mov a,l\n    sub c\n    mov l,a\n    mov a,h\n    sbb b\n    mov h,a\n    jc div16_loop\n    inr e\n    jmp div16_lop2        \n"},s_strcpy:{uses:null,code:"    push h\ns_strcpy2:\n    ldax d\n    mov m,a\n    ora a\n    jz strcpe\n    inx d\n    inx h\n    jmp s_strcpy2\nstrcpe:\n    pop h\n    ret        \n"},s_div10:{uses:null,code:"\tmvi c,10\n\tmvi b,16\n\txra a\ns_d10_1:dad h\n\tral\n\tcmp c\n\tjc s_d10_2\n\tinr l\n\tsub c\ns_d10_2: dcr b\n\tjnz s_d10_1\n\tRET\n"},s_mul10:{uses:null,code:"    push d\n    dad h\n    mov d,h\n    mov e,l\n    dad h\n    dad h\n    dad d\n    pop d\n    ret\n"},s_mul10add:{uses:null,code:"    push d\n    dad h\n    mov d,h\n    mov e,l\n    dad h\n    dad h\n    dad d\n    pop d\n    dad d\n    ret\n"},s_check:{uses:["erridx"],code:"    mov a,h\n    cmp b\n    jc s_c_g\n    mov a,l\n    cmp c\n    jnc erridx\ns_c_g:\n    dad h\n    dad d\n    ret\n"},o_logic:{uses:null,code:"olofix: LXI B,8000h\n\tDAD B\n\tXCHG\n\tDAD B\n\tXCHG\n\tRET\ndofalse: LXI H,0\n\tRET\ndotrue: LXI H,1\n\tRET\n"},o_lt:{uses:["o_logic"],code:"\tCALL olofix\n\tMOV A,H\n\tCMP D\n\tJC dofalse\n\tJNZ dotrue\n\tMOV A,L\n\tCMP E\n\tJZ dofalse\n\tJC dofalse\n\tJMP dotrue\n"},o_ge:{uses:["o_logic"],code:"\tCALL olofix\n\tMOV A,H\n\tCMP D\n\tJC dotrue\n\tJNZ dofalse\n\tMOV A,L\n\tCMP E\n\tJZ dotrue\n\tJC dotrue\n\tJMP dofalse\n"},o_gt:{uses:["o_logic"],code:"\tCALL olofix\n\tMOV A,D\n\tCMP H\n\tJC dofalse\n\tJNZ dotrue\n\tMOV A,E\n\tCMP L\n\tJZ dofalse\n\tJC dofalse\n\tJMP dotrue\n"},o_le:{uses:["o_logic"],code:"\tCALL olofix\n\tMOV A,D\n\tCMP H\n\tJC dotrue\n\tJNZ dofalse\n\tMOV A,E\n\tCMP L\n\tJZ dotrue\n\tJC dotrue\n\tJMP dofalse\n"},o_eq:{uses:["o_logic"],code:"\tMOV A,L\n\tCMP E\n\tJNZ dofalse\n\tMOV A,H\n\tCMP D\n\tJNZ dofalse\n\tJMP dotrue\n"},o_neq:{uses:["o_logic"],code:"\tMOV A,L\n\tCMP E\n\tJNZ dotrue\n\tMOV A,H\n\tCMP D\n\tJNZ dotrue\n\tJMP dofalse\n"},o_streq:{uses:["o_logic"],code:"\tLDAX D\n\tCMP M\n\tJNZ dofalse\n\tORA A\n\tJZ dotrue\n\tINX D\n\tINX H\n\tJMP o_streq\n"},o_add:{uses:null,inline:!0,code:"\tDAD D\t;o_add\n"},o_mul:{uses:["mul16","errovfl","f_abs"],code:"    mov a,h\n    xra d\n    ani 80h\n    jm o_mul_minus\n    call o_mulabs\n    mov a,d\n    ora e\n    jnz errovfl\n    RET\no_mul_minus:\n    call o_mulabs\n    mov a,d\n    ora e\n    jnz errovfl\n    mov a,h\n    cma\n    mov h,a\n    mov a,l\n    cma\n    mov l,a\n    inx h\n    RET\no_mulabs:\n    call f_abs\n    xchg \n    call f_abs\n    jmp mul16\n"},o_sub:{uses:null,inline:!0,code:"\tMOV A, E\n\tSUB L\n\tMOV L, A\n\tMOV A, D\n\tSBB H\n\tMOV H, A\n"},o_div:{uses:["div16","errdiv","f_abs"],code:"    mov a,h\n    ora l\n    jz errdiv\n    mov a,h\n    xra d\n    ani 80h\n    jm o_div_minus\n    call o_divabs\n    xchg\n    RET\no_div_minus:\n    call o_divabs\n    xchg\n    mov a,h\n    cma\n    mov h,a\n    mov a,l\n    cma\n    mov l,a\n    inx h\n    RET\no_divabs:\n    call f_abs\n    xchg \n    call f_abs\n    jmp div16\n"},o_mod:{uses:["div16","errdiv","f_abs"],code:"    mov a,h\n    ora l\n    jz errdiv\n    mov a,h\n    xra d\n    ani 80h\n    jm o_mod_minus\n    call o_modabs\n    RET\no_mod_minus:\n    call o_modabs\n    mov a,h\n    cma\n    mov h,a\n    mov a,l\n    cma\n    mov l,a\n    inx h\n    RET\no_modabs:\n    call f_abs\n    xchg \n    call f_abs\n    jmp div16\n"},o_concat:{uses:["__heap"],code:"        push h\n        push d\n        lxi b,0\n    o_cc_cnt:\n        mov a,m\n        inx h\n        ora a\n        jz o_cc_cnt1\n        inx b\n        jmp o_cc_cnt\n    o_cc_cnt1:\n        ldax d\n        inx d\n        ora a\n        jz o_cc_a\n        inx b\n        jmp o_cc_cnt1\n    o_cc_a:\n        inx b\n        call hp_a\n        push h\n        pop b\n        pop d\n    o_cc_l1:\n        ldax d\n        ora a\n        jz o_cc_l2\n        mov m,a\n        inx d\n        inx h\n        jmp o_cc_l1\n    o_cc_l2:\n        pop d\n    o_cc_l3:\n        ldax d\n        ora a\n        mov m,a\n        jz o_cc_l4\n        inx d\n        inx h\n        jmp o_cc_l3\n    o_cc_l4:\n        push b\n        pop h\n\tRET\n"},f_max:{uses:null,code:"\tRET\n"},f_abs:{uses:null,code:"\tMOV A,H\n\tORA A\n\tRP\n\tCMA\n\tMOV H,A\n\tMOV A,L\n\tCMA\n\tMOV L,A\n\tINX H\n\tRET\n"},f_neg:{uses:null,code:"\tMOV A,H\n\tCMA\n\tMOV H,A\n\tMOV A,L\n\tCMA\n\tMOV L,A\n\tINX H\n\tRET\n"},f_sgn:{uses:null,code:"\tMOV A,H\n\tRLCA\n\tJC f_sgn_m\n\tLXI H,1\n\tRET\nf_sgn_m: LXI H,0FFFFh\n\tRET\n"},f_rnd:{uses:null,sysdw:["rndseed"],code:"\tRET\n"},s_getaddr:{uses:null,code:"\tDAD D\t;o_add\n\tMOV E,M\n\tINX H\n\tMOV D,M\n\tXCHG\n\tRET\n"},f_peek:{uses:null,code:"\tMOV A,M\n\tMVI H,0\n\tMOV L,A\n\tRET\n"},f_dpeek:{uses:null,code:"\tMOV A,M\n\tINX H\n\tMOV H,M\n\tMOV L,A\n\tRET\n"},f_len:{uses:[],code:"\tPUSH D\n\tLXI D,0\nf_ll:MOV A,M\n\tORA A\n\tJZ f_le\n\tINX D\n\tINX H\n\tJMP f_ll\nf_le:\tXCHG\n\tPOP D\n\tRET\n"},f_val:{uses:["s_mul10add","f_neg"],code:"\tpush d\n    mvi c,0 ;sign\n    lxi d,0\n    mov a,m\n    cpi 2Dh ;-\n    jnz f_v_c1\n    inx h\n    mvi c,1 ;sign\nf_v_c:    \n    mov a,m\nf_v_c1:    \n    ora a\n    jz f_v_ret\n    cpi 30h ;0\n    jc f_v_ret\n    cpi 3ah\n    jnc f_v_ret\n    push h\n    xchg\n    sui 30h\n    mov e,a\n    mvi d,0\n    call s_mul10add\n    xchg\n    pop h\n    inx h\n    jmp f_v_c\nf_v_ret:\n    xchg\n\tpop d\n    mov a,c\n    ora a\n    rz\n    jmp f_neg\n"},f_chrS:{uses:["__heap"],code:"\tMOV A,L\n\tpush psw\n\tlxi b,2\n\tcall hp_a\n\tpop psw\n\tmov m,a\n\tinx h\n\tmvi m,0\n\tdcx h\n\tRET\n"}};function InputStream(n){var t=0,r=1,u=0;return{next:function(){var e=n.charAt(t++);"\n"==e?(r++,u=0):u++;return e},peek:e,eof:function(){return""==e()},croak:function(e){throw new Error(e+" ("+r+":"+u+")")}};function e(){return n.charAt(t)}}function TokenStream(u){var n=null,t=" if then else rem print input goto let for to next step gosub return end stop data read restore repeat until continue break poke dpoke dim while endwhile ",r=" abs neg rnd max chr$ sgn len val peek dpeek ";return{next:function(){var e=n;return n=null,e||v()},peek:e,eof:function(){return null==e()},croak:u.croak};function o(e){return 0<=r.indexOf(" "+e.toLowerCase()+" ")}function a(e){return/[0-9]/i.test(e)}function l(e){return/[a-z_]/i.test(e)}function f(e){return l(e)||0<="?!0123456789".indexOf(e)}function i(e){return 0<="+-*/%=&|<>!".indexOf(e)}function p(e){return 0<=" \t\n\r".indexOf(e)}function s(e){for(var n="";!u.eof()&&e(u.peek());)n+=u.next();return n}function k(){var e,n=s(f);return"$"==u.peek()?(u.next(),o(n+"$")?{type:"fn",value:n.toLowerCase()+"S"}:{type:"var$",value:n.toLowerCase()}):{type:(e=n,0<=t.indexOf(" "+e.toLowerCase()+" ")?"kw":o(n)?"fn":"var"),value:n.toLowerCase()}}function c(){return{type:"str",value:function(e){var n=!1,t="";for(u.next();!u.eof();){var r=u.next();if(n)t+=r,n=!1;else if("\\"==r)n=!0;else{if(r==e)break;t+=r}}return t}('"')}}function v(){if(s(p),u.eof())return null;var n,e,t=u.peek();if('"'==t)return c();if("$"==t)return function(){u.next();var e=s(function(e){return/[0-9a-fA-F]/i.test(e)});return{type:"num",value:parseInt(e,16)}}();if(a(t))return n=!1,e=s(function(e){return"."==e?!n&&(n=!0):a(e)}),{type:"num",value:parseFloat(e)};if(l(t)){var r=k();return"kw"==r.type&&"rem"==r.value?{type:"remark",value:s(function(e){return"\n"!=e})}:r}return 0<=":".indexOf(t)?{type:"colon",value:u.next()}:0<=",;#(){}[]".indexOf(t)?{type:"punc",value:u.next()}:i(t)?{type:"op",value:s(i)}:void u.croak("Can't handle character: "+t)}function e(){return n||(n=v())}}function parse(e){for(var n=e.split("\n"),t=[],r=0;r<n.length;r++){for(var u=n[r],o={source:u,rawTokens:[],label:null,_numline:r,_cmd:1},a=TokenStream(InputStream(u));!a.eof();){var l=a.next();o.rawTokens.push(l)}if(o.rawTokens.length&&(o.tokens=[].concat(o.rawTokens),"num"!=o.tokens[0].type||(o.label=o.tokens.shift().value,o.tokens.length))){for(var f=[];o.tokens.length;){"colon"==(l=o.tokens.shift()).type||"kw"==l.type&&"then"==l.value?("var"==f[0].type&&f.unshift({type:"kw",value:"let"}),"var$"==f[0].type&&f.unshift({type:"kw",value:"let"}),"kw"==l.type&&"then"==l.value&&(f.push(l),o.tokens.length&&"num"==o.tokens[0].type&&f.push({type:"kw",value:"goto"})),t.push({source:u,rawTokens:o.rawTokens,label:o.label,_numline:o._numline,_cmd:o._cmd,tokens:f}),f=[],o.label=null,o._cmd++,"kw"==l.type&&"then"==l.value&&o.tokens.length&&"num"==o.tokens[0].type&&f.push({type:"kw",value:"goto"})):f.push(l)}"var"==f[0].type&&f.unshift({type:"kw",value:"let"}),"var$"==f[0].type&&f.unshift({type:"kw",value:"let"}),o.tokens=f,t.push(o)}}return t}var PRECEDENCE={"=":1,"||":2,"&&":3,"<":7,">":7,"<=":7,">=":7,"==":7,"<>":7,"+":10,"-":10,"*":20,"/":20,"%":20},ARITY={max:["int","int"],abs:["int"],neg:["int"],peek:["int"],dpeek:["int"],sgn:["int"],rnd:[],len:["str"],val:["str"],chrS:["int"]},exprType=function(e,r){var t="undefined";if("num"==(t=e.type))return"int";if("str"==t)return"str";if("var"==t)return"int";if("var[]"==t)return"int";if("var$"==t)return"str";if("binary"==t){var n=exprType(e.left,r);if(n==exprType(e.right,r))return n;croak("Mismatched types in expression",r)}if("fn"==t){var a=e.value;return"S"==a[a.length-1]?"str":"int"}croak("Invalid expression type",r)},compute=function(e,r,t){switch(t){case"+":return e+r;case"-":return e-r;case"*":return e*r;case"/":return e/r}},expr=function(i,p,v){var s=function(e){var r=i.shift();r||croak(e+" is missing",p),"punc"!=r.type&&croak(e+" is missing, "+r.type+"instead",p),r.value!=e&&croak(e+" is missing, "+r.value+" instead",p)},l=function(){var e=i.shift();if("op"==e.type&&"-"==e.value)return(e=i.shift()).value=-1*e.value,e;if("var"==e.type&&i.length&&"punc"==i[0].type&&"("==i[0].value){s("(");var r=expr(i,p,v),t=exprType(r,p);return s(")"),{type:"var[]",value:e.value,index:r}}if("fn"==e.type){var n=ARITY[e.value].length,a=[];s("(");for(;0<n;){r=expr(i,p,v),t=exprType(r,p);ARITY[e.value][0]!=t&&croak("Argument type mismatch, expected: "+ARITY[e.value][0],p),a.push(r),--n&&s(",")}return s(")"),{type:"fn",value:e.value,operands:a}}if("punc"==e.type&&"("==e.value){var u=expr(i,p,v);return s(")"),u}return e},f=function(e,r){if(!i.length)return e;var t=i[0];if("op"!=t.type)return e;var n=PRECEDENCE[t.value];if(r<n){i.shift();var a=f(l(),n),u={type:"="!=t.value||v?"binary":"assign",operator:t.value,left:e,right:a};return"num"==e.type&&"num"==a.type&&(u={type:"num",value:compute(e.value,a.value,t.value)}),"str"==e.type&&"str"==a.type&&"+"==t.value&&(u={type:"str",value:e.value+a.value}),f(u,r)}return e};return f(l(),0)};var labelIndex=function(n){for(var e={},t=0;t<n.length;t++){if(n[t].label)e[n[t].label]=t}return e},findNewLine=function(n,e){for(var t=e[n]._numline;n<e.length;)if(e[++n]._numline>t)return n;return null},skipMark=function(n,e){var t=findNewLine(n,e);t&&(e[t]._skip||(e[t]._skip=[]),e[t]._skip.push(n))},findLabel=function(n,e){return void 0!==e[n]?e[n]:null},croak=function(n,e){throw new Error(n+" ("+e._numline+":"+e._cmd+")")},opAsm=function(n,e,t){if("str"==t){switch(n){case"+":return"concat";case"=":return"streq"}croak("Invalid string operator",e)}switch(n){case"+":return"add";case"-":return"sub";case"*":return"mul";case"/":return"div";case"%":return"mod";case"=":return"eq";case"<>":return"neq";case"<":return"lt";case">":return"gt";case"<=":return"le";case">=":return"ge"}},varAsm=function(){var n="";for(var e in ENV.vars){var t=ENV.vars[e],r=e.split("_")[0];switch(t){case"int":n+="v_"+r+":\t DS 2\n";continue;case"str":n+="vs_"+r+":\t DS 2\n";continue;case"sysdb":n+="sv_"+r+":\t DS 1\n";continue;case"sysdw":n+="sv_"+r+":\t DS 2\n";continue}}for(var e in ENV.intarr){n+="vai_"+e+":\t DS "+2*ENV.intarr[e]+"\n"}return n},strAsm=function(){for(var n="",e=0;e<ENV.strs.length;e++){n+="cs_"+e+':\t DB "'+ENV.strs[e]+'",0\n'}return n},fnAsm=function(){for(var n,e="";n=ENV.uses.shift();){var t=LIB[n];if(!t)throw new Error("Cannot link "+n);if(t.sysdb)for(var r=0;r<t.sysdb.length;r++)ENV.addVar(t.sysdb[r],"sysdb");if(t.sysdw)for(r=0;r<t.sysdw.length;r++)ENV.addVar(t.sysdw[r],"sysdw");e+=";---"+n+"---\n",e+=n+":\n",e+=t.code,e+=";---"+n+"-end---\n\n"}return e},exprAsm=function(n,e,t,r){void 0===t&&(t="int"),void 0===r&&(r=!1);var a=n.type;if("num"==a&&!r)return"\tLXI H,"+n.value+"\n";if("str"==a&&!r)return"\tLXI H,cs_"+ENV.addStr(n.value)+"\t;"+n.value+"\n";if("num"==a&&r)return"\tLXI D,"+n.value+"\n";if("str"==a&&r)return"\tLXI D,cs_"+ENV.addStr(n.value)+"\t;"+n.value+"\n";if("var"==a&&!r)return ENV.addVar(n.value,"int"),"\tLHLD v_"+n.value+"\n";if("var"==a&&r)return ENV.addVar(n.value,"int"),"\tXCHG\n\tLHLD v_"+n.value+"\n\tXCHG\n";if("var$"==a&&!r)return ENV.addVar(n.value,"str"),"\tLHLD vs_"+n.value+"\n";if("var$"==a&&r)return ENV.addVar(n.value,"str"),"\tXCHG\n\tLHLD vs_"+n.value+"\n\tXCHG\n";if("var[]"==a&&(ENV.intarr[n.value]||croak("You have to DIM array first",e),"num"==n.index.type&&n.index.value>=ENV.intarr[n.value]&&croak("Index out of bound",e)),"var[]"==a&&!r){if("num"==n.index.type)return n.index.value?"\tLHLD vai_"+n.value+"+"+2*n.index.value+"\n":"\tLHLD vai_"+n.value+"\n";ENV.addUse("s_check");var i="\tPUSH D\n"+exprAsm(n.index,e,"int");return i+="\tLXI D,vai_"+n.value+"\n",i+="\tLXI B,"+ENV.intarr[n.value]+"\n",i+="\tCALL s_check\n",i+="\tMOV E,M\n\tINX H\n\tMOV D,M\n\tXCHG\n\tPOP D\n"}if("var[]"==a&&r){if("num"==n.index.type)return n.index.value?"\tXCHG\n\tLHLD vai_"+n.value+"+"+2*n.index.value+"\n\tXCHG\n":"\tXCHG\n\tLHLD vai_"+n.value+"\n\tXCHG\n";ENV.addUse("s_check");i="\tPUSH H\n"+exprAsm(n.index,e,"int");return i+="\tLXI D,vai_"+n.value+"\n",i+="\tLXI B,"+ENV.intarr[n.value]+"\n",i+="\tCALL s_check\n",i+="\tMOV E,M\n\tINX H\n\tMOV D,M\n\tPOP H\n"}if("binary"==a){if("num"==n.right.type&&1==n.right.value&&"+"==n.operator)return i=exprAsm(n.left,e,t)+"\tINX H\n";if("num"==n.left.type&&1==n.left.value&&"+"==n.operator)return i=exprAsm(n.right,e,t)+"\tINX H\n";if("num"==n.right.type&&1==n.right.value&&"-"==n.operator)return i=exprAsm(n.left,e,t)+"\tDCX H\n";if("num"==n.right.type&&2==n.right.value&&"*"==n.operator)return i=exprAsm(n.left,e,t)+"\tDAD H\n";if("num"==n.right.type&&4==n.right.value&&"*"==n.operator)return i=exprAsm(n.left,e,t)+"\tDAD H\n\tDAD H\n";i="num"==n.left.type&&"binary"==n.right.type?exprAsm(n.right,e,t)+exprAsm(n.left,e,t,!0):"num"==n.left.type&&"fn"==n.right.type?exprAsm(n.right,e,t)+exprAsm(n.left,e,t,!0):exprAsm(n.left,e,t,!0)+"\tpush d\n"+exprAsm(n.right,e,t)+"\tpop d\n";var s="o_"+opAsm(n.operator,e,t);return LIB[s].inline?i+=LIB[s].code:(ENV.addUse(s),i+="\tCALL "+s+"\n"+(r?"\tXCHG\n":""))}if("fn"==a){if(i="",1==n.operands.length)i+=exprAsm(n.operands[0]);else if(2==n.operands.length)i+=exprAsm(n.operands[0],!0),i+=exprAsm(n.operands[1]);else for(var u=0;u<n.operands.length;u++)i+=exprAsm(n.operands[u])+"\tPUSH\n";return ENV.addUse("f_"+n.value),i+="\tCALL f_"+n.value+"\n"+(r?"\tXCHG\n":"")}return"\tUNKNOWN "+JSON.stringify(n)+"\n"},ENV={vars:{},addVar:function(n,e){ENV.vars[n+"_"+e]=e},intarr:{},addArrInt:function(n,e){ENV.intarr[n]=e},strs:[],addStr:function(n){return ENV.strs.indexOf(n)<0&&ENV.strs.push(n),ENV.strs.indexOf(n)},uses:[],addUse:function(n){if(ENV.uses.indexOf(n)<0){ENV.uses.push(n);var e=LIB[n];if(!e)throw new Error("Cannot link "+n);if(e.uses)for(var t=0;t<e.uses.length;t++){var r=e.uses[t];ENV.addUse(r)}}return ENV.uses.indexOf(n)}},generator=function(n,e){ENV.vars={},ENV.strs=[],ENV.uses=[];var t=function(n,e){return!!e&&("punc"==e.type&&(e.value==n&&(l.shift(),!0)))},r=function(n,e){return!!e&&("op"==e.type&&(e.value==n&&(l.shift(),!0)))},a="";a+=";----CODE SEGMENT (ROMable)\n";var i=labelIndex(n);ENV.labels=i;for(var s=[],u=0;u<n.length;u++){var v,o=n[u];a+="CMD"+u+":\n",o._skip&&(a+="SKIP"+o._skip[0]+":\n");var l=[].concat(o.tokens);if("kw"==l[0].type){var p=l[0].value;switch(l.shift(),a+="; "+p+"\n",p){case"goto":A=l[0],null===(d=findLabel(A.value,i))&&croak("Target line not found",o),a+="\tJMP CMD"+d+"\n";continue;case"gosub":var d;A=l[0],null===(d=findLabel(A.value,i))&&croak("Target line not found",o),a+="\tCALL CMD"+d+"\n";continue;case"return":a+="\tRET\n";continue;case"end":a+="\tRST 0\n";continue;case"stop":ENV.addUse("errstop"),a+="\tJMP ERRSTOP\n";continue;case"repeat":s.unshift(["CMD"+u,"R"]);continue;case"endwhile":s.length||croak("ENDWHILE without WHILE",o),"W"!=s[0][1]&&croak("WHILE / ENDWHILE mismatched",o),a+="\tJMP "+s[0][0]+"\n",a+="WB"+s[0][0]+":\n",s.shift();continue;case"break":s.length||croak("BREAK outside the loop",o),a+="\tJMP "+s[0][1]+"B"+s[0][0]+"\n";continue;case"continue":s.length||croak("CONTINUE outside the loop",o),a+="\tJMP "+s[0][1]+"C"+s[0][0]+"\n";continue;case"dim":"var[]"!=(c=expr(l,o)).type&&croak("DIM needs a variable name",o),"num"!=c.index.type&&croak("DIM needs a constant size",o),ENV.addArrInt(c.value,c.index.value);continue;case"let":var c;if("var"==(c=expr(l,o)).type){if(l.length||croak("LET should assign something",o),r("++",l[0])){ENV.addVar(c.value,"int"),a+="\tLHLD v_"+c.value+"\n",a+="\tINX H\n",a+="\tSHLD v_"+c.value+"\n",l.shift();continue}if(r("--",l[0])){ENV.addVar(c.value,"int"),a+="\tLHLD v_"+c.value+"\n",a+="\tDCX H\n",a+="\tSHLD v_"+c.value+"\n",l.shift();continue}if(r("**",l[0])){ENV.addVar(c.value,"int"),a+="\tLHLD v_"+c.value+"\n",a+="\tDAD H\n",a+="\tSHLD v_"+c.value+"\n",l.shift();continue}if(r("+++",l[0])){ENV.addVar(c.value,"int"),a+="\tLHLD v_"+c.value+"\n",a+="\tINX H\n",a+="\tINX H\n",a+="\tSHLD v_"+c.value+"\n",l.shift();continue}if(r("---",l[0])){ENV.addVar(c.value,"int"),a+="\tLHLD v_"+c.value+"\n",a+="\tDCX H\n",a+="\tDCX H\n",a+="\tSHLD v_"+c.value+"\n",l.shift();continue}console.log(l),croak("LET syntax mismatch",o)}"assign"!==c.type&&croak("LET should assign",o),"var"!=(A=c.left).type&&"var[]"!=A.type&&"var$"!=A.type&&croak("No variable name",o),"var$"==A.type&&(ENV.addVar(A.value,"str"),ENV.addUse("__heap"),a+="\tlhld vs_"+A.value+"\n\tcall hp_unass\n");var f=c.right,L=exprType(f,o);a+=exprAsm(f,o,L),"var"==A.type?("int"!=L&&croak("Cannot assign this to int variable",o),ENV.addVar(A.value,"int"),a+="\tSHLD v_"+A.value+"\n"):"var[]"==A.type?("int"!=L&&croak("Cannot assign this to int variable",o),ENV.intarr[A.value]||croak("You have to DIM array first",o),"num"==A.index.type&&A.index.value>=ENV.intarr[A.value]&&croak("Index out of bound",o),"num"==A.index.type?A.index.value?a+="\tSHLD vai_"+A.value+"+"+2*A.index.value+"\n":a+="\tSHLD vai_"+A.value+"\n":(ENV.addUse("s_check"),a+="\tPUSH H\n",a+=exprAsm(A.index,o,L),a+="\tLXI D,vai_"+A.value+"\n",a+="\tLXI B,"+ENV.intarr[A.value]+"\n",a+="\tCALL s_check\n",a+="\tPOP D\n",a+="\tMOV M,E\n",a+="\tINX H\n",a+="\tMOV M,D\n")):"var$"==A.type&&("str"!=L&&croak("Cannot assign this to string variable",o),a+="\tSHLD vs_"+A.value+"\n\tcall hp_assign\n",a+="\tcall hp_gc\n");continue;case"poke":f=expr(l,o),L=exprType(f,o);"punc"==(v=l.shift()).type&&","==v.value||croak("Syntax error",o);var h=expr(l,o),x=exprType(h,o);"num"!=h.type&&(a+=exprAsm(h,o,x),a+="\tpush h\n"),a+=exprAsm(f,o,L),"num"!=h.type?(a+="\tpop d\n",a+="\tmov m,e\n"):a+="\tmvi m,"+h.value%256+"\n";continue;case"dpoke":f=expr(l,o),L=exprType(f,o);"punc"==(v=l.shift()).type&&","==v.value||croak("Syntax error",o);h=expr(l,o),x=exprType(h,o);"num"!=h.type&&(a+=exprAsm(h,o,x),a+="\tpush h\n"),a+=exprAsm(f,o,L),"num"!=h.type?(a+="\tpop d\n",a+="\tmov m,e\n",a+="\tinx h\n",a+="\tmov m,d\n"):(a+="\tmvi m,"+h.value%256+"\n",a+="\tinx h\n",a+="\tmvi m,"+(h.value>>8)+"\n");continue;case"for":"var"!=(A=l.shift()).type&&croak("No usable variable name",o),"op"==(v=l.shift()).type&&"="==v.value||croak("FOR without an initial assignment",o);var E=expr(l,o),N=exprType(E,o);"kw"==(v=l.shift()).type&&"to"==v.value||croak("FOR without TO",o);var V="ex";f=expr(l,o),L=exprType(f,o);"num"==f.type?V=f.value:(a+=exprAsm(f,o,L),a+="\tSHLD sv_forL"+u+"\n",ENV.addVar("forL"+u,"sysdw"));var m=1;if(l.length){"kw"==(v=l.shift()).type&&"step"==v.value||croak("Did you mean STEP?",o);f=expr(l,o),L=exprType(f,o);"num"==f.type?m=f.value:(a+=exprAsm(f,o,L),a+="\tSHLD sv_forS"+u+"\n",ENV.addVar("forS"+u,"sysdw"),m="ex")}a+=exprAsm(E,o,N),ENV.addVar(A.value,"int"),a+="\tSHLD v_"+A.value+"\n",a+="\tJMP FTCMD"+u+"\n",a+="FLCMD"+u+":\n",s.unshift(["CMD"+u,"F",u,A.value,m,V]);continue;case"next":s.length||croak("NEXT without FOR",o),"F"!=s[0][1]&&croak("Loops mismatched",o),"var"!=(A=l.shift()).type&&croak("No usable variable name",o),A.value!=s[0][3]&&croak("FOR / NEXT variable mismatch",o),a+="FC"+s[0][0]+":\n",a+="\tLHLD v_"+A.value+"\n","ex"==(m=s[0][4])?(a+="\tXCHG\n",a+="\tLHLD sv_forS"+s[0][2]+"\n",a+="\tDAD D\n"):1==m?a+="\tINX H\n":(a+="\tLXI D,"+m+"\n",a+="\tDAD D\n"),a+="\tSHLD v_"+A.value+"\n",a+="FT"+s[0][0]+":\n","ex"==(V=s[0][5])?(a+="\tXCHG\n",a+="\tLHLD sv_forL"+s[0][2]+"\n"):a+="\tLXI D,"+V+"\n",a+="\tMOV A,L\n",a+="\tCMP E\n",a+="\tJNZ FLCMD"+s[0][2]+"\n",a+="\tMOV A,H\n",a+="\tCMP D\n",a+="\tJNZ FLCMD"+s[0][2]+"\n",a+="FB"+s[0][0]+":\n",s.shift();continue;case"if":f=expr(l,o,!0),L=exprType(f,o);skipMark(u,n),a+=exprAsm(f,o,L),a+="\tMOV A,H\n\tORA L\n",a+="\tJZ SKIP"+u+"\n";continue;case"until":s.length||croak("UNTIL without REPEAT",o),"R"!=s[0][1]&&croak("UNTIL / REPEAT mismatched",o);f=expr(l,o,!0);a+="RC"+s[0][0]+":\n",a+=exprAsm(f,o),a+="\tMOV A,H\n\tORA L\n",a+="\tJZ "+s[0][0]+"\n",a+="RB"+s[0][0]+":\n",s.shift();continue;case"while":s.unshift(["CMD"+u,"W"]);f=expr(l,o,!0);a+="WC"+s[0][0]+":\n",a+=exprAsm(f,o),a+="\tMOV A,H\n\tORA L\n",a+="\tJZ WB"+s[0][0]+"\n";continue;case"input":for(var D=!1;l.length;)if(t("#",l[0])){var y=expr(l,o,!0);a+=exprAsm(y,o,"int"),ENV.addUse("inpchan"),a+="\tCALL inpchan\n",t(",",l[0])||croak("Syntax error",o)}else{var A;if("var"!=(A=expr(l,o)).type)if("var[]"!=A.type)if("var$"!=A.type){f=A,L=exprType(f,o);a+=exprAsm(f,o,L),ENV.addUse("print"+L),a+="\tCALL print"+L+"\n",H=!0,t(";",l[0])?H=!1:t(",",l[0])&&(ENV.addUse("printtab"),a+="\tCALL printtab\n",H=!1)}else{if(ENV.addVar(A.value,"str"),a+="\tlhld vs_"+A.value+"\n\tcall hp_unass\n",ENV.addUse("inputstr"),a+="\tCALL inputstr\n",ENV.addUse("__heap"),D=!0,a+="\tSHLD vs_"+A.value+"\n\tcall hp_assign\n",!l.length)break;t(",",l[0])||croak("Syntax error",o),l.shift()}else{if(ENV.intarr[A.value]||croak("You have to DIM array first",o),"num"==A.index.type&&A.index.value>=ENV.intarr[A.value]&&croak("Index out of bound",o),ENV.addUse("inputint"),ENV.addUse("s_check"),a+="\tCALL inputint\n","num"==A.index.type?A.index.value?a+="\tSHLD vai_"+A.value+"+"+2*A.index.value+"\n":a+="\tSHLD vai_"+A.value+"\n":(a+="\tPUSH H\n",a+=exprAsm(A.index,o,L),a+="\tLXI D,vai_"+A.value+"\n",a+="\tLXI B,"+ENV.intarr[A.value]+"\n",a+="\tCALL s_check\n",a+="\tPOP D\n",a+="\tMOV M,E\n",a+="\tINX H\n",a+="\tMOV M,D\n"),!l.length)break;t(",",l[0])||croak("Syntax error",o)}else{if(ENV.addUse("inputint"),a+="\tCALL inputint\n",ENV.addVar(A.value,"int"),a+="\tSHLD v_"+A.value+"\n",!l.length)break;t(",",l[0])||croak("Syntax error",o)}}D&&(a+="\tcall hp_gc\n");continue;case"print":for(var H=!0;l.length;)if(t("#",l[0])){y=expr(l,o,!0);a+=exprAsm(y,o,"int"),ENV.addUse("prtchan"),a+="\tCALL prtchan\n",t(",",l[0])||croak("Syntax error",o)}else{f=expr(l,o,!0),L=exprType(f,o);a+=exprAsm(f,o,L),ENV.addUse("print"+L),a+="\tCALL print"+L+"\n",H=!0,t(";",l[0])?H=!1:t(",",l[0])&&(ENV.addUse("printtab"),a+="\tCALL printtab\n",H=!1)}H&&(ENV.addUse("println"),a+="\tCALL println\n");continue}l.length&&croak("Extra characters",o)}}s.length&&croak("Non-closed loops",o);var _=!1;return 0<=ENV.uses.indexOf("inputint")&&(_=!0),0<=ENV.uses.indexOf("inputstr")&&(_=!0),0<=ENV.uses.indexOf("__heap")&&(a="\tCALL HP_INIT\n"+a),a="\tORG "+e.org+"\n\t.ent $\n\n"+a,a+="ERRGO:\t"+e.goback+"\n",a+=fnAsm(),a+=";----DATA SEGMENT\n",a+=strAsm(),a+=";----BSS SEGMENT\n",a+=varAsm(),_&&(a+="i_buffer: ds 257\n"),a+="\n\nHEAP EQU $\nRAMTOP EQU "+e.ramtop+"\nds RAMTOP-$\n\n"};

	var CONFIG = {
	    "OMENALPHA": {
	        org:"8000h",
	        ramtop:"0f800h",
	        goback:"RST 0"
	    }
	}

	return {
		compile: function(source) {
			return generator(parse(source),CONFIG.OMENALPHA)
		}
	}
}));
